Создание проекта предприятия.

ДЗ 
09.02.2024
- (готово) написать конструктор с параметрами котоорый создает объект полностью (кроме Guid).
- (готово) заполнить полями остальные. + метод для вывода в консоль.
- (не успели) протестировать конструкторы в XUnit Tests.

11.02.2024
- (не сделал) Оформить класс Фриланса (добавить поля)
- (не сделал) Создать класс Штат содержит всх людей в компании в классе Company AddPersons

14.02.2023
- (готово) Class Compamy Организовать список отделов.
- (не сделал) Отдел фрилансеров
- (готово) Повторить списки
- (готово) В добавленный отдел добавить человека. (Обращение к эдементам списка [через точку] метод Add/ Company.Depadtments.Add[2])
- (готово) GetEmployeCount
- (готово) Добавить отдел 

21.02
- Описать методы и классы
- Наполнить проект персоналом

23.02.
- переделать добавление сотрудников в одну строчку с помощью нового метода
- в классе Employee создать конструктор в котрый будут передвавться данные имя, фамилия... + поле (должность) 

25.02
- В класс Company добавить метод который добавляет отделы принимает на вход массив строк с именами отделов. company.Departments.Add(массив с именами департаментов)
- * в классе Company реализовать метод который добавляет список сотрудников в нужный отдел. Отдел поределяется именем отдела. 2 параметра 1-название отдела 2-список сотрудников. (У отдела есть список Employess + использовать метод AddRange - добавляет список.)

28.02
- Создать метод перемещения сотрудника из отдела в отдел с отображением инфо в каком отделе был и куда переместился.
- Повторить лямбдавыражения

08.03
- Заменить новыми методами текущий код.
- Посмотреть в классах какие еще методы можно добавить.
- Написать метод проверки сотрудника в классе Department (true - сотрудник есть false - сотрудника нет).

10.03
- План "Меню" консольного приложения + вывод в консоль.
- Логика меню do whail, switch case.
- Вынос в файл описания компании (.txt).
- Вынос в файл данных о сотруднике (.json).

15.03
- В качестве диалога добавить сотрудника в отдел
- Создать метод который создает объект и с помощью объекта создает объект пользователя

17.03
- Проверка если при добавлении сотрудника добалять 0 вместо таб номера, то генерировать его самостоятьельно на основе метода макстабномр
- Справочник работы с отделами. Вывести в табличной форме порядковый номер, название отдела (табы и разделители |) Формируем на основе текущих отделов. Класс компани имеет доступ ко всем департаментам. В списке сделать выборку
- List <string> departmentNames = Departments.Select(dep => dep.DepartmentName); Вывести в табличной форме. 

18.03
- С учетом форматирования отображать отдел и сотрудников в отделе. Назваие отдела, разделительт, далее отдел, ФИО, должность 
- 

Person - обезличенная сущность
Company - основной класс "Компания"
Employee - штатный сотрудник
FreelanceEmployee - внештатный сотрудник
Position - должности сорудников (многие о многим)
Department - отдел для сотрудников (многие о многим)
ReportCard - табель для сотрудников () 
Bonus - часть с расчетами по базовому тарифам + переработки, штрафы, и т.п.
PersonalProtectiveEquipment - средства индивидуальной защиты сотрудника
Training - обучение сотрудников.

